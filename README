Fenix README
============

TODO Add a description of this application


USING ECLIPSE

If you want to open this project using Eclipse, you will need the following:
- The JEE version of Eclipse version 3.5 or newer (this project was created using Eclipse 3.6)
- M2Eclipse and M2Eclipse Maven Integration for WTP (http://m2eclipse.sonatype.org/installing-m2eclipse.html)
- AspectJ Development Tools (http://www.eclipse.org/ajdt/)
- Optionally: Spring IDE (http://www.springsource.org) 
              OR
              SpringSource Tool Suite (http://www.springsource.com/developer/sts)		
- Optionally: Eclemma (http://www.eclemma.org) in order to view unit test coverage

When you have your IDE setup, execute the following command to have Maven automatically generate the necessary Eclipse project files:

	$ mvn eclipse:eclipse

After this, you can open the project in Eclipse.

Please note, that you *cannot* open the project directly using M2Eclipse. This is because M2Eclipse and AJDT do not currently integrate very well and Fenix requires AspectJ compile-time weaving in order to function properly.


USING NETBEANS

As Fenix is a pure Maven-project, and NetBeans has excellent Maven support, you can open the project directly without installing any additional plugins. NetBeans 6.9.1 has been successfully tested.


CONFIGURING THE DATABASE

To keep deployment as simple as possible, Fenix handles the database connection itself. Although Fenix can use most of the popular RDBMs currently on the market (both open source and commercial), it has been configured to use MySQL (http://www.mysql.com) by default.

The default connection parameters are the following:
- Host:           localhost
- Database:       fenix
- Username:       fenixuser
- Password:       fenix
- DDL generation: on (will automatically create missing tables, etc.)

If these differ from your environment, you can edit them in the src/main/resources/database.properties file.

If you want to use another RDBMs, add the JDBC driver to the classpath and update the database.properties file accordingly.

	TODO Add info about JNDI/JTA configuration 

