<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd ">

	<!-- Import properties containing information about the data source. -->
	<context:property-placeholder location="classpath:database.properties" />

	<!-- Turn on annotation-based configuration. -->
	<context:annotation-config />

	<!-- This makes it possible to use annotations (@Component, @Repository, 
		etc.) to configure the beans in this application context. The packages net.pkhsolutions.fenix.services 
		and net.pkhsolutions.fenix.intra will be scanned, including their sub packages. -->
	<context:component-scan base-package="net.pkhsolutions.fenix.services" />
	<context:component-scan base-package="net.pkhsolutions.fenix.intra" />

	<!-- Message source for internationalization. -->
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="i18n.messages" />
	</bean>

	<!-- Here, we define the locales we are going to support. Each of this locales 
		should have a corresponding messages.properties file in the resources/i18n 
		directory. -->
	<bean id="localeEnglish" class="java.util.Locale">
		<constructor-arg index="0" value="en" />
		<constructor-arg index="1" value="US" />
	</bean>

	<bean id="localeSwedish_Finland" class="java.util.Locale">
		<constructor-arg index="0" value="sv" />
		<constructor-arg index="1" value="FI" />
	</bean>

	<bean id="localeFinnish" class="java.util.Locale">
		<constructor-arg index="0" value="fi" />
		<constructor-arg index="1" value="FI" />
	</bean>

	<!-- Construct a map where the locale acts as key and its human readable 
		name acts as value. -->
	<util:map id="supportedLocales" value-type="java.lang.String">
		<entry key-ref="localeEnglish" value="English" />
		<entry key-ref="localeSwedish_Finland" value="Svenska" />
		<entry key-ref="localeFinnish" value="Suomi" />
	</util:map>

	<bean id="applicationBean" class="net.pkhsolutions.fenix.ui.FenixApplication"
		scope="prototype" autowire-candidate="false">
		<property name="guiContextLocation" value="WEB-INF/guiContext.xml" />
	</bean>
	
	<!-- This creates a pooling DBCP data source. The configuration parameters -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${database.driverClassName}" />
		<property name="username" value="${database.username}" />
		<property name="password" value="${database.password}" />
		<property name="url" value="${database.url}" />
	</bean>
	<!-- <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"> 
		<property name="entityManagerFactory" ref="entityManagerFactory"/> </bean> 
		<tx:annotation-driven transaction-manager="transactionManager" mode="proxy"/> 
		<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"> 
		<property name="dataSource" ref="dataSource"/> <property name="jpaVendorAdapter"> 
		<bean id="jpaAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"> 
		<property name="generateDdl" value="${database.generateDDL}" /> <property 
		name="showSql" value="${database.showSql}" /> </bean> </property> </bean> -->
</beans>
