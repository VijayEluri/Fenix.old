Fenix README
============

TODO Add a description of this application

USING ECLIPSE

If you want to open this project using Eclipse, you will need the following:
- The JEE version of Eclipse version 3.5 or newer (this project was created using Eclipse 3.6)
- M2Eclipse and M2Eclipse Maven Integration for WTP (http://m2eclipse.sonatype.org/installing-m2eclipse.html)
- Optionally: Spring IDE (http://www.springsource.org) 
              OR
              SpringSource Tool Suite (http://www.springsource.com/developer/sts)		
- Optionally: Eclemma (http://www.eclemma.org) in order to view unit test coverage


CONFIGURING THE DATABASE

To keep deployment as simple as possible, Fenix handles the database connection itself. Although Fenix can use most of 
the popular RDBMs currently on the market (both open source and commercial), it has been configured to use 
MySQL (http://www.mysql.com) by default.

The default connection parameters are the following:
- Host:           localhost
- Database:       fenix
- Username:       fenixuser
- Password:       fenix
- DDL generation: on (will automatically create missing tables, etc.)

If these differ from your environment, you can edit them in the src/main/resources/database.properties file.

If you want to use another RDBMs, add the JDBC driver to the classpath and update the database.properties file
accordingly.

	TODO Add info about JNDI/JTA configuration 


DEPLOYMENT ON TOMCAT

Although Fenix can be deployed on many different Servlet 2.5 compliant application servers, it has been configured
to be deployed on Tomcat 6 (http://tomcat.apache.org) by default. However, due to the use of AspectJ load-time weaving, 
some additional tweaking of the Tomcat server installation itself must be performed before Fenix can be successfully 
deployed. 

Locate the file 'org.springframework.instrument.tomcat-XXX.jar' (it should be in your local Maven repository, as it
has been included as a dependency in the Fenix POM) and copy it into $CATALINA_HOME/lib, where $CATALINA_HOME represents 
the root of the Tomcat installation.

Then package Fenix into a WAR (e.g. by issuing the 'mvn package' command) and deploy it as you would deploy any
other web application.


DEPLOYMENT ON OTHER WEB SERVERS

The Spring reference documentation contains information about how to setup some other web servers for load-time
weaving: http://static.springsource.org/spring/docs/3.0.x/spring-framework-reference/html/aop.html#aop-aj-ltw-environments

